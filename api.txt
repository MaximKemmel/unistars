openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://51.250.4.213.nip.io
  description: Generated server url
paths:
  /v1/set_confirmed_applicant:
    put:
      tags:
      - confirmed-applicant-controller
      operationId: setConfirmedApplicant
      parameters:
      - name: state
        in: query
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/password/recovery/{linkId}:
    put:
      tags:
      - auth-controller
      operationId: setNewPassword
      parameters:
      - name: linkId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPasswordDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /v1/change_email/{linkId}:
    put:
      tags:
      - auth-controller
      operationId: setNewEmail
      parameters:
      - name: linkId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /v1/advertising/on_open:
    put:
      tags:
      - advertisings-controller
      operationId: onOpenAdvertising
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/advertising/on_click:
    put:
      tags:
      - advertisings-controller
      operationId: onClickAdvertising
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/upload_to_gallery:
    post:
      tags:
      - storage-controller
      operationId: uploadToUniversityGallery
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - files
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileStorageDto'
  /v1/university_unsubscribe:
    post:
      tags:
      - university-controller
      operationId: unsubscribeUniversity
      parameters:
      - name: universityId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/university_unjoin:
    post:
      tags:
      - student-controller
      operationId: unjoinUniversity
      parameters:
      - name: universityId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/university_subscribe:
    post:
      tags:
      - university-controller
      operationId: subscribeUniversity
      parameters:
      - name: universityId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/university_join:
    post:
      tags:
      - student-controller
      operationId: joinUniversity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JoinUniversityRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/temp_storage:
    post:
      tags:
      - storage-controller
      operationId: getUploadedTempFileUris
      parameters:
      - name: deleteAtDays
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - files
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /v1/system_logout:
    post:
      tags:
      - auth-controller
      operationId: logout
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /v1/subscribe_event:
    post:
      tags:
      - event-controller
      operationId: subscribeEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscribeEventRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/storage:
    post:
      tags:
      - storage-controller
      operationId: getUploadedFileUris
      parameters:
      - name: type
        in: query
        required: true
        schema:
          type: string
          enum:
          - IMAGE
          - VIDEO
          - AUDIO
          - DOCUMENT
          - ARCHIVE
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - files
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
    delete:
      tags:
      - storage-controller
      operationId: deleteFiles
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /v1/set_type_of_degree:
    post:
      tags:
      - university-controller
      operationId: setTypeOfDegree
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UniversityTypeOfDegreeDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/set_primary_to_university:
    post:
      tags:
      - student-controller
      operationId: setPrimaryUniversity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrimaryUniversityRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/set_moderators:
    post:
      tags:
      - event-controller
      operationId: setModerators
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventModeratorsPostRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/set_applicant:
    post:
      tags:
      - student-controller
      operationId: setApplicantState
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicantStateRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/send_code_email:
    post:
      tags:
      - auth-controller
      operationId: sendCodeToEmail
      parameters:
      - name: email
        in: query
        required: true
        schema:
          type: string
      - name: language
        in: query
        required: false
        schema:
          type: string
          default: ru
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/request_new_university:
    post:
      tags:
      - auth-controller
      operationId: requestNewUniversity
      parameters:
      - name: email
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/request_confirmed_applicant:
    post:
      tags:
      - confirmed-applicant-controller
      operationId: requestConfirmedApplicantStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmedApplicantRequestDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/request_ambassador:
    post:
      tags:
      - ambassador-request-controller
      operationId: requestAmbassadorStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AmbassadorRequestDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/request_advertising:
    get:
      tags:
      - advertising-request-controller
      operationId: getAdvertisings
      parameters:
      - name: universityId
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdRequestGetDto'
    post:
      tags:
      - advertising-request-controller
      operationId: createRequestAdvertising
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdCreateRequestDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdRequestGetDto'
  /v1/register_user:
    post:
      tags:
      - auth-controller
      operationId: handleUserRegistration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationUserDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/register_university:
    post:
      tags:
      - auth-controller
      operationId: handleUniversityRegistration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UniversityPostDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UniversityDto'
  /v1/refresh:
    post:
      tags:
      - auth-controller
      operationId: refresh
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LoginResponse'
  /v1/redeem_invite_code/{code}:
    post:
      tags:
      - utility-controller
      operationId: redeemInviteCode
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/recover_chat:
    post:
      tags:
      - chat-rest-controller
      operationId: recoverChat
      parameters:
      - name: chatId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /v1/quit_confirmed_applicant:
    post:
      tags:
      - confirmed-applicant-controller
      operationId: quitConfirmedApplicant
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/push_notifications/send:
    post:
      tags:
      - push-notification-controller
      operationId: sendPushNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushNotificationRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /v1/push_notifications/save_fcm_token:
    post:
      tags:
      - push-notification-controller
      operationId: saveFcmToken
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /v1/pending_exclude_student:
    post:
      tags:
      - university-controller
      operationId: pendingExcludeStudent
      parameters:
      - name: studentId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /v1/pending_except_ambassador:
    post:
      tags:
      - ambassador-request-controller
      operationId: pendingExceptAmbassador
      parameters:
      - name: studentId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /v1/password/recovery:
    post:
      tags:
      - auth-controller
      operationId: recoverPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /v1/offer_event_subscription:
    post:
      tags:
      - event-controller
      operationId: offerEventSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OfferSubscriptionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/notifications/viewed:
    post:
      tags:
      - notification-controller
      operationId: markNotificationsAsViewed
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/login:
    post:
      tags:
      - auth-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LoginResponse'
  /v1/invite_confirmed_applicant:
    post:
      tags:
      - confirmed-applicant-controller
      operationId: inviteConfirmedApplicant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteConfirmedApplicantRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/invite_bulk_applicants:
    post:
      tags:
      - confirmed-applicant-controller
      operationId: inviteBulkApplicants
      requestBody:
        content:
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BulkInviteResponse'
  /v1/hide_chat:
    post:
      tags:
      - chat-rest-controller
      operationId: hideChat
      parameters:
      - name: chatId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: selfDelete
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /v1/grant_event_access:
    post:
      tags:
      - event-controller
      operationId: extendEventAccess
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventAccessDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/export-university-data:
    post:
      tags:
      - university-controller
      operationId: exportUniversityData
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FileUriResponse'
  /v1/exclude_student:
    post:
      tags:
      - university-controller
      operationId: excludeStudent
      parameters:
      - name: studentId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/except_ambassador:
    post:
      tags:
      - ambassador-request-controller
      operationId: exceptAmbassador
      parameters:
      - name: studentId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/employee:
    get:
      tags:
      - employee-controller
      operationId: getEmployees
      parameters:
      - name: universityId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeProfileDto'
    post:
      tags:
      - employee-controller
      operationId: createEmployee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePostDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EmployeeDto'
    delete:
      tags:
      - employee-controller
      operationId: deleteEmployees
      parameters:
      - name: ids
        in: query
        required: true
        schema:
          type: array
          items:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
    patch:
      tags:
      - employee-controller
      operationId: editEmployee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EmployeeDto'
  /v1/email_mass_communication:
    post:
      tags:
      - university-controller
      operationId: emailMassCommunication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MailingDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /v1/create_event:
    post:
      tags:
      - event-controller
      operationId: createEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventPostDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/create_direct_chat:
    post:
      tags:
      - chat-rest-controller
      operationId: createDirectChat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDirectChatDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /v1/create_chat_with_university:
    post:
      tags:
      - chat-rest-controller
      operationId: createChatWithUniversity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChatWithUniversityDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /v1/confirmed_applicant/{token}:
    post:
      tags:
      - confirmed-applicant-controller
      operationId: checkInvitationToken
      parameters:
      - name: token
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /v1/chat_mailing:
    post:
      tags:
      - chat-rest-controller
      operationId: chatMailing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatMailingDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /v1/change_settings:
    post:
      tags:
      - setting-controller
      operationId: changeSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettingsRequestDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/change_password:
    post:
      tags:
      - auth-controller
      operationId: changePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /v1/change_email:
    post:
      tags:
      - auth-controller
      operationId: changeEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/booklet:
    get:
      tags:
      - booklet-controller
      operationId: getBooklet
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BookletDto'
    post:
      tags:
      - booklet-controller
      operationId: createBooklet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookletPostDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BookletDto'
    delete:
      tags:
      - booklet-controller
      operationId: deleteBooklet
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
    patch:
      tags:
      - booklet-controller
      operationId: editBooklet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookletPatchDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BookletDto'
  /v1/article:
    get:
      tags:
      - article-controller
      operationId: getArticles
      parameters:
      - name: tagIds
        in: query
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int32
      - name: favorites
        in: query
        required: false
        schema:
          type: boolean
      - name: myArticles
        in: query
        required: false
        schema:
          type: boolean
      - name: universityId
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArticleDto'
    post:
      tags:
      - article-controller
      operationId: createArticle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticlePostDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ArticleDto'
    delete:
      tags:
      - article-controller
      operationId: deleteArticle
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
    patch:
      tags:
      - article-controller
      operationId: editArticle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ArticleDto'
  /v1/article/set_like:
    post:
      tags:
      - article-controller
      operationId: setLike
      parameters:
      - name: articleId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ArticleDto'
  /v1/article/set_favorite:
    post:
      tags:
      - article-controller
      operationId: setFavorite
      parameters:
      - name: articleId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ArticleDto'
  /v1/advertising:
    get:
      tags:
      - advertisings-controller
      operationId: getAdvertising
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdvertisingDto'
    post:
      tags:
      - advertisings-controller
      operationId: createAdvertising
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvertisingPostDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdvertisingDto'
    delete:
      tags:
      - advertisings-controller
      operationId: hideAdvertising
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
    patch:
      tags:
      - advertisings-controller
      operationId: editAdvertising
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvertisingPatchDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdvertisingDto'
  /v1/additional_information_of_confirmed_applicant:
    get:
      tags:
      - confirmed-applicant-controller
      operationId: getAdditionalInformationOfConfirmedApplicant
      parameters:
      - name: studentId
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JsonNode'
    post:
      tags:
      - confirmed-applicant-controller
      operationId: saveAdditionalInformationOfConfirmedApplicant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdditionalInformationRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/accept_invitation_confirmed_applicant:
    post:
      tags:
      - confirmed-applicant-controller
      operationId: acceptInvitationConfirmedApplicant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptInvitationConfirmedApplicantRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/accept_confirmed_applicant:
    post:
      tags:
      - confirmed-applicant-controller
      operationId: acceptConfirmedApplicant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptConfirmedApplicantRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/accept_ambassador:
    post:
      tags:
      - ambassador-request-controller
      operationId: acceptAmbassador
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptAmbassadorRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/switch_pinned_chat:
    patch:
      tags:
      - chat-rest-controller
      operationId: switchPinnedChat
      parameters:
      - name: chatId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: pinned
        in: query
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /v1/set_university_coordinates:
    patch:
      tags:
      - university-controller
      operationId: setUniversityCoordinates
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: number
                format: double
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/set_student_status:
    patch:
      tags:
      - student-controller
      operationId: setStudentStatus
      parameters:
      - name: statusId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/organization/set:
    patch:
      tags:
      - organization-controller
      operationId: setOrganization
      parameters:
      - name: universityId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: isOrganization
        in: query
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/on_show_onboarding:
    patch:
      tags:
      - user-controller
      operationId: showOnboarding
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/edit_university_profile:
    patch:
      tags:
      - university-controller
      operationId: editUniversityProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UniversityUpdateDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /v1/edit_student_profile:
    patch:
      tags:
      - student-controller
      operationId: editStudentProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStudentProfileRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /v1/edit_event:
    patch:
      tags:
      - event-controller
      operationId: editEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditEventRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/cancel_pending_request:
    patch:
      tags:
      - utility-controller
      operationId: cancelDelayRequest
      parameters:
      - name: requestId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/answer_request_advertising:
    patch:
      tags:
      - advertising-request-controller
      operationId: answerRequestAdvertising
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnswerToAdRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdRequestGetDto'
  /v1/advertising/edit_advanced:
    patch:
      tags:
      - advertisings-controller
      operationId: editAdminAdvertising
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvertisingPatchAdminDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdvertisingDto'
  /v1/admin/unset_university_privileged:
    patch:
      tags:
      - admin-controller
      operationId: unsetUniversityPrivileged
      parameters:
      - name: ids
        in: query
        required: true
        schema:
          type: array
          items:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/admin/set_university_status:
    patch:
      tags:
      - admin-controller
      operationId: setUniversityStatus
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SetUniversityStatus'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/admin/set_university_privileged:
    patch:
      tags:
      - admin-controller
      operationId: setUniversityPrivileged
      parameters:
      - name: universityIds
        in: query
        required: true
        schema:
          type: array
          items:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/users/report:
    get:
      tags:
      - user-controller
      operationId: getUsersReport
      parameters:
      - name: query
        in: query
        required: false
        schema:
          type: string
      - name: afterDate
        in: query
        required: false
        schema:
          type: string
          format: date
      - name: beforeDate
        in: query
        required: false
        schema:
          type: string
          format: date
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: byte
  /v1/user_count:
    get:
      tags:
      - user-controller
      operationId: getUserCount
      parameters:
      - name: afterDate
        in: query
        required: false
        schema:
          type: string
          format: date
      - name: beforeDate
        in: query
        required: false
        schema:
          type: string
          format: date
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserCountDto'
  /v1/university_students:
    get:
      tags:
      - university-controller
      operationId: getStudents
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDto'
  /v1/university_profile_by_invite_code:
    get:
      tags:
      - university-controller
      operationId: getUniversityProfileByInviteCode
      parameters:
      - name: inviteCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UniversityDto'
  /v1/university_profile:
    get:
      tags:
      - university-controller
      operationId: getUniversityProfile
      parameters:
      - name: id
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UniversityDto'
  /v1/universities_short:
    get:
      tags:
      - university-controller
      operationId: getUniversitiesShortDto
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UniversityShortDto'
  /v1/universities_by_ids:
    get:
      tags:
      - university-controller
      operationId: getUniversitiesByIds
      parameters:
      - name: ids
        in: query
        required: true
        schema:
          type: array
          items:
            type: integer
            format: int32
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UniversityDto'
  /v1/universities:
    get:
      tags:
      - university-controller
      operationId: getFilteredUniversities
      parameters:
      - name: search
        in: query
        required: false
        schema:
          type: string
      - name: city
        in: query
        required: false
        schema:
          type: string
      - name: costOfEducationMin
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: costOfEducationMax
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: languageOfInstructionArray
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: formOfEducationArray
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: typeOfDegreeArray
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: specializationIds
        in: query
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int32
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UniversityDto'
  /v1/typesOfDegrees:
    get:
      tags:
      - utility-controller
      operationId: getTypesOfDegrees
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DictionaryResponseTypeOfDegree'
  /v1/subscribers:
    get:
      tags:
      - university-controller
      operationId: getSubscribers
      parameters:
      - name: universityId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: query
        in: query
        required: false
        schema:
          type: string
      - name: afterDate
        in: query
        required: false
        schema:
          type: string
          format: date
      - name: beforeDate
        in: query
        required: false
        schema:
          type: string
          format: date
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDto'
  /v1/student_profile:
    get:
      tags:
      - student-controller
      operationId: getStudentProfile
      parameters:
      - name: id
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StudentDto'
  /v1/statuses:
    get:
      tags:
      - utility-controller
      operationId: getStatuses
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DictionaryResponseStatusDto'
  /v1/specializations:
    get:
      tags:
      - utility-controller
      operationId: getSpecializations
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DictionaryResponseSpecializationDto'
  /v1/search_students:
    get:
      tags:
      - student-controller
      operationId: searchStudents
      parameters:
      - name: search
        in: query
        required: false
        schema:
          type: string
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDto'
  /v1/search_chat_companions:
    get:
      tags:
      - chat-rest-controller
      operationId: searchChatCompanions
      parameters:
      - name: searchQueue
        in: query
        required: false
        schema:
          type: string
      - name: selectedUniversities
        in: query
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int32
      - name: selectedCountries
        in: query
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int32
      - name: selectedLanguages
        in: query
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int32
      - name: createdChatWith
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChatCompanionsResponse'
  /v1/role:
    get:
      tags:
      - auth-controller
      operationId: getCurrentUserRole
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /v1/quotas_and_grants:
    get:
      tags:
      - utility-controller
      operationId: getQuotasAndGrants
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DictionaryResponseQuotasAndDiscountDto'
  /v1/profile_by_user_id:
    get:
      tags:
      - user-controller
      operationId: getProfileByUserId
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /v1/privacy_types:
    get:
      tags:
      - utility-controller
      operationId: getPrivacyTypes
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
                  enum:
                  - APPLICANT
                  - MY_CONFIRMED_APPLICANT
                  - MY_STUDENT
                  - AMBASSADOR
                  - SUBSCRIBER
                  - INDIVIDUAL
                  - OTHER_CONFIRMED_APPLICANT
                  - OTHER_STUDENT
                  - ALL_CONFIRMED_APPLICANT
                  - ALL_STUDENT
  /v1/permission_types:
    get:
      tags:
      - utility-controller
      operationId: getPermissionTypes
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /v1/organization:
    get:
      tags:
      - organization-controller
      operationId: setOrganization_1
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UniversityDto'
  /v1/notifications:
    get:
      tags:
      - notification-controller
      operationId: getNotifications
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationDto'
  /v1/my_request_advertising:
    get:
      tags:
      - advertising-request-controller
      operationId: getMyAdvertisings
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdRequestGetDto'
  /v1/lifestyle:
    get:
      tags:
      - utility-controller
      operationId: getLifestyle
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DictionaryResponseAmenityDto'
  /v1/languagesOfInstructions:
    get:
      tags:
      - utility-controller
      operationId: getLanguagesOfInstructions
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DictionaryResponseLanguageOfInstructionDto'
  /v1/get_university_events:
    get:
      tags:
      - event-controller
      operationId: getUniversityEvents
      parameters:
      - name: id
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: search
        in: query
        required: false
        schema:
          type: string
      - name: limitParticipantsMin
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: limitParticipantsMax
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: afterDate
        in: query
        required: false
        schema:
          type: string
          format: date
      - name: beforeDate
        in: query
        required: false
        schema:
          type: string
          format: date
      - name: afterTime
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: beforeTime
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: isOnline
        in: query
        required: false
        schema:
          type: boolean
      - name: myselfEvents
        in: query
        required: false
        schema:
          type: boolean
      - name: ongoingEvents
        in: query
        required: false
        schema:
          type: boolean
      - name: upcomingEvents
        in: query
        required: false
        schema:
          type: boolean
      - name: typeId
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventResponseDto'
  /v1/get_temporary_invite_code:
    get:
      tags:
      - utility-controller
      operationId: getTemporaryInviteCode
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /v1/get_settings:
    get:
      tags:
      - setting-controller
      operationId: getSettings
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SettingsResponseDto'
  /v1/get_invite_code:
    get:
      tags:
      - utility-controller
      operationId: getInviteCode
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /v1/get_events_subscriptions:
    get:
      tags:
      - event-controller
      operationId: getMyEvents
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventResponseDto'
  /v1/get_event_by_id:
    get:
      tags:
      - event-controller
      operationId: getEventById
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EventResponseDto'
  /v1/get_event_access:
    get:
      tags:
      - event-controller
      operationId: getEventAccess
      parameters:
      - name: eventId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EventAccessDto'
  /v1/get_chat_friends:
    get:
      tags:
      - chat-rest-controller
      operationId: getChatFriends
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChatFriendsResponse'
  /v1/get_chat_by_id:
    get:
      tags:
      - chat-rest-controller
      operationId: getChatById
      parameters:
      - name: chatId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChatDto'
  /v1/get_ambassadors_user_ids:
    get:
      tags:
      - university-controller
      operationId: getAmbassadorsUserIds
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AmbassadorDto'
  /v1/formsOfEducation:
    get:
      tags:
      - utility-controller
      operationId: getFormsOfEducation
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DictionaryResponseFormOfEducation'
  /v1/eventTypes:
    get:
      tags:
      - utility-controller
      operationId: getEventTypes
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DictionaryResponseEventType'
  /v1/employee/permission:
    get:
      tags:
      - employee-controller
      operationId: getPermissionEmployee
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EmployeeDto'
  /v1/employee/get_my:
    get:
      tags:
      - employee-controller
      operationId: getMyEmployees
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeProfileDto'
  /v1/download_subscribers:
    get:
      tags:
      - university-controller
      operationId: downloadSubscribers
      parameters:
      - name: query
        in: query
        required: false
        schema:
          type: string
      - name: afterDate
        in: query
        required: false
        schema:
          type: string
          format: date
      - name: beforeDate
        in: query
        required: false
        schema:
          type: string
          format: date
      responses:
        "200":
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /v1/destinations:
    get:
      tags:
      - utility-controller
      operationId: getDestinations
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DictionaryResponseDestinationDto'
  /v1/countries:
    get:
      tags:
      - utility-controller
      operationId: getCountries
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DictionaryResponseCountryDto'
  /v1/code_checking:
    get:
      tags:
      - auth-controller
      operationId: codeChecking
      parameters:
      - name: email
        in: query
        required: true
        schema:
          type: string
      - name: code
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/cities:
    get:
      tags:
      - utility-controller
      operationId: getCities
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DictionaryResponseCityDto'
  /v1/chat_list:
    get:
      tags:
      - chat-rest-controller
      operationId: getChatList
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChatListResponse'
  /v1/chat_history:
    get:
      tags:
      - chat-rest-controller
      operationId: getChatHistory
      parameters:
      - name: chatId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChatHistoryResponse'
  /v1/booklet/get_list:
    get:
      tags:
      - booklet-controller
      operationId: getBookletList
      parameters:
      - name: universityId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookletDto'
  /v1/article_tags:
    get:
      tags:
      - utility-controller
      operationId: getArticleTags
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DictionaryResponseArticleTagDto'
  /v1/article/get_by_id:
    get:
      tags:
      - article-controller
      operationId: getArticle
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ArticleDto'
  /v1/applicant_invite_history:
    get:
      tags:
      - university-controller
      operationId: getApplicantsInviteHistory
      parameters:
      - name: filterName
        in: query
        required: false
        schema:
          type: string
      - name: filterStatus
        in: query
        required: false
        schema:
          type: string
      - name: newOnesFirst
        in: query
        required: false
        schema:
          type: boolean
          default: true
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvitationHistoryResponse'
  /v1/advertising/get_recommended:
    get:
      tags:
      - advertisings-controller
      operationId: getRecommendedAdvertising
      parameters:
      - name: destination
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/AdvertisingShortDto'
  /v1/advertising/get_random:
    get:
      tags:
      - advertisings-controller
      operationId: getAdvertisings_1
      parameters:
      - name: destination
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/AdvertisingShortDto'
  /v1/advertising/get_my:
    get:
      tags:
      - advertisings-controller
      operationId: getMyAdvertisings_1
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdvertisingDto'
  /v1/advertising/get_by_university:
    get:
      tags:
      - advertisings-controller
      operationId: getByUniversity
      parameters:
      - name: universityId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdvertisingDto'
  /v1/admin/university_search_story/{id}:
    get:
      tags:
      - admin-controller
      operationId: getSearchStory
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditLog'
  /v1/admin/send_new_year_emails:
    get:
      tags:
      - admin-controller
      operationId: sendNewYearEmails
      parameters:
      - name: universityIds
        in: query
        required: true
        schema:
          type: array
          items:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /v1/admin/get_requests_new_universities:
    get:
      tags:
      - admin-controller
      operationId: getRequestsNewUniversities
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestNewUniversityDto'
  /v1/admin/event_search_story/{id}:
    get:
      tags:
      - admin-controller
      operationId: getEventSearchStory
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditLog'
  /v1/storage/pending_delete:
    delete:
      tags:
      - storage-controller
      operationId: pendingDeleteFiles
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /v1/revoke_event_access:
    delete:
      tags:
      - event-controller
      operationId: reduceEventAccess
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventAccessDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/employee/pending_except:
    delete:
      tags:
      - employee-controller
      operationId: pendingDeleteEmployees
      parameters:
      - name: ids
        in: query
        required: true
        schema:
          type: array
          items:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /v1/delete_event:
    delete:
      tags:
      - event-controller
      operationId: deleteEvent
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/delete_account:
    delete:
      tags:
      - user-controller
      operationId: deleteStudent
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/booklet/pending_delete:
    delete:
      tags:
      - booklet-controller
      operationId: pendingDeleteBooklet
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /v1/advertising/deleted_permanently_by_university:
    delete:
      tags:
      - advertisings-controller
      operationId: deleteAllUniversityAdvertisings
      parameters:
      - name: universityId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
  /v1/advertising/deleted_permanently:
    delete:
      tags:
      - advertisings-controller
      operationId: deleteAdvertising
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
components:
  schemas:
    SimpleMessageResponse:
      type: object
      properties:
        message:
          type: string
    NewPasswordDto:
      required:
      - password
      type: object
      properties:
        password:
          maxLength: 50
          minLength: 8
          type: string
    FileStorageDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        cloudFileName:
          type: string
        originalFileName:
          maxLength: 255
          minLength: 0
          type: string
        bucketName:
          maxLength: 50
          minLength: 0
          type: string
        deleteAtDays:
          type: integer
          format: int32
    JoinUniversityRequest:
      type: object
      properties:
        universityId:
          type: integer
          format: int32
        startYear:
          type: integer
          format: int32
        specialization:
          $ref: '#/components/schemas/SpecializationDto'
        fio:
          type: string
        faculty:
          type: string
        directionName:
          type: string
        type:
          type: string
        enrollmentOrderNumber:
          type: string
        groupNumber:
          type: string
        courseOfStudy:
          type: integer
          format: int32
    SpecializationDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        nameEnglish:
          type: string
    SubscribeEventRequest:
      type: object
      properties:
        id:
          type: integer
          format: int32
        state:
          type: boolean
    UniversityTypeOfDegreeDto:
      type: object
      properties:
        universityId:
          type: integer
          format: int32
        typeOfDegreeId:
          type: integer
          format: int32
        studyDuration:
          type: integer
          format: int32
        minCost:
          type: integer
          format: int32
        maxCost:
          type: integer
          format: int32
        programLink:
          maxLength: 255
          minLength: 0
          type: string
        quotasDescriptionLink:
          maxLength: 255
          minLength: 0
          type: string
        formOfEducationIds:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int32
        languageOfInstructionIds:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int32
        quotasAndDiscountIds:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int32
        specializationIds:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int32
    PrimaryUniversityRequest:
      type: object
      properties:
        universityId:
          type: integer
          format: int32
        isPrimary:
          type: boolean
    EventModeratorsPostRequest:
      required:
      - moderators
      type: object
      properties:
        eventId:
          maximum: 2147483647
          minimum: 1
          type: integer
          format: int32
        moderators:
          type: array
          items:
            $ref: '#/components/schemas/ModeratorDto'
    ModeratorDto:
      required:
      - moderator
      type: object
      properties:
        studentId:
          maximum: 2147483647
          minimum: 1
          type: integer
          format: int32
        moderator:
          type: boolean
    ApplicantStateRequest:
      type: object
      properties:
        id:
          type: integer
          format: int32
        state:
          type: boolean
    ConfirmedApplicantRequestDto:
      required:
      - universityId
      type: object
      properties:
        universityId:
          type: integer
          format: int32
        description:
          type: string
    AmbassadorRequestDto:
      required:
      - id
      type: object
      properties:
        id:
          type: integer
          format: int32
        ambassadorDescription:
          type: string
    AdCreateRequestDto:
      required:
      - communicationEmail
      - description
      - imageUrl
      - subtitle
      - title
      - websiteUrl
      type: object
      properties:
        title:
          maxLength: 255
          minLength: 0
          type: string
        subtitle:
          maxLength: 255
          minLength: 0
          type: string
        description:
          type: string
        imageUrl:
          maxLength: 255
          minLength: 0
          type: string
        websiteUrl:
          maxLength: 255
          minLength: 0
          type: string
        email:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        communicationEmail:
          maxLength: 50
          minLength: 0
          type: string
        communicationPhone:
          maxLength: 30
          minLength: 0
          type: string
    AdRequestGetDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        isRejected:
          type: boolean
        descriptionReject:
          type: string
        communicationEmail:
          type: string
        communicationPhone:
          type: string
        advertising:
          $ref: '#/components/schemas/AdvertisingShortDto'
    AdvertisingShortDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        universityId:
          type: integer
          format: int32
        title:
          type: string
        subtitle:
          type: string
        description:
          type: string
        imageUrl:
          type: string
        websiteUrl:
          type: string
        email:
          type: string
        screenDestination:
          type: array
          items:
            type: string
        bannerSize:
          type: string
        createdAt:
          type: string
          format: date-time
        editAt:
          type: string
          format: date-time
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
    RegistrationUserDto:
      required:
      - email
      - password
      - username
      type: object
      properties:
        username:
          maxLength: 50
          minLength: 5
          type: string
        password:
          maxLength: 50
          minLength: 8
          type: string
        email:
          type: string
    UniversityPostDto:
      required:
      - email
      - name
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        name:
          type: string
        shortName:
          type: string
        nameEnglish:
          type: string
        shortNameEnglish:
          type: string
        countryId:
          type: integer
          format: int32
        cityId:
          type: integer
          format: int32
        organization:
          type: boolean
    AmbassadorId:
      type: object
      properties:
        studentId:
          type: integer
          format: int32
        universityId:
          type: integer
          format: int32
    AmenityDto:
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          maxLength: 50
          minLength: 0
          type: string
        nameEnglish:
          type: string
    CityDto:
      required:
      - geolocation
      - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          maxLength: 50
          minLength: 0
          type: string
        nameEnglish:
          type: string
        geolocation:
          $ref: '#/components/schemas/Geolocation'
    ConfirmedApplicantId:
      required:
      - studentId
      - universityId
      type: object
      properties:
        studentId:
          type: integer
          format: int32
        universityId:
          type: integer
          format: int32
    CountryDto:
      required:
      - languages
      - name
      - nameEnglish
      - nativeName
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          maxLength: 50
          minLength: 0
          type: string
        languages:
          type: array
          items:
            type: string
        nativeName:
          type: array
          items:
            type: string
        nameEnglish:
          maxLength: 50
          minLength: 0
          type: string
    Geolocation:
      type: object
      properties:
        coordinates:
          type: array
          items:
            type: number
            format: double
    LanguageOfInstructionDto:
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    UniversityDto:
      type: object
      properties:
        type:
          type: string
        id:
          type: integer
          format: int32
        name:
          type: string
        information:
          type: string
        foundation:
          type: string
          format: date
        shortDescription:
          type: string
        faqLink:
          type: string
        photo:
          type: string
        description:
          type: string
        shortName:
          type: string
        logoUrl:
          type: string
        coverUrl:
          type: string
        costOfEducationMin:
          type: integer
          format: int32
        costOfEducationMax:
          type: integer
          format: int32
        universityLink:
          type: string
        geolocation:
          $ref: '#/components/schemas/Geolocation'
        verified:
          type: boolean
        ambassadorIds:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AmbassadorId'
        ambassadorRequests:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AmbassadorRequestDto'
        confirmedApplicantIds:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ConfirmedApplicantId'
        confirmedApplicantRequests:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ConfirmedApplicantRequestDto'
        studentIds:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int32
        subscriberUserIds:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int32
        subscriberStudentsIds:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int32
        subscriberUniversitiesIds:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int32
        userId:
          type: integer
          format: int32
        userEmail:
          type: string
        password:
          type: string
        userCreatedAt:
          type: string
          format: date-time
        userCountries:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CountryDto'
        userCity:
          $ref: '#/components/schemas/CityDto'
        numberEmployees:
          type: integer
          format: int32
        userLanguages:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/LanguageOfInstructionDto'
        street:
          maxLength: 50
          minLength: 0
          type: string
        houseNumber:
          maxLength: 10
          minLength: 0
          type: string
        letter:
          maxLength: 3
          minLength: 0
          type: string
        admission:
          maxLength: 255
          minLength: 0
          type: string
        careers:
          maxLength: 500
          minLength: 0
          type: string
        phoneNumberBody:
          maxLength: 20
          minLength: 0
          type: string
        phoneNumberCountryPrefix:
          maxLength: 6
          minLength: 0
          type: string
        amenities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AmenityDto'
        standGalleryImages:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FileStorageDto'
        linksSocialNetwork:
          type: array
          items:
            type: string
        universityTypeOfDegrees:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UniversityTypeOfDegreeDto'
        statusPartnership:
          type: string
          enum:
          - NONE
          - BASIC
          - PAID
    RefreshTokenRequest:
      type: object
      properties:
        refreshToken:
          type: string
    LoginResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    PushNotificationRequest:
      required:
      - body
      - title
      type: object
      properties:
        title:
          type: string
        body:
          type: string
        to:
          type: array
          items:
            type: string
        userIds:
          type: array
          items:
            type: integer
            format: int32
    EmailDto:
      required:
      - email
      type: object
      properties:
        email:
          type: string
    OfferSubscriptionRequest:
      required:
      - eventId
      type: object
      properties:
        students:
          type: array
          items:
            type: integer
            format: int32
        universities:
          type: array
          items:
            type: integer
            format: int32
        eventId:
          maximum: 2147483647
          minimum: 1
          type: integer
          format: int32
    InviteConfirmedApplicantRequest:
      type: object
      properties:
        studentId:
          type: integer
          format: int32
        email:
          type: string
    BulkInviteResponse:
      type: object
      properties:
        success:
          type: array
          items:
            type: string
        failed:
          type: object
          additionalProperties:
            type: string
    EventAccessDto:
      required:
      - eventId
      type: object
      properties:
        eventId:
          type: integer
          format: int32
        universityIds:
          type: array
          items:
            type: integer
            format: int32
        studentIds:
          type: array
          items:
            type: integer
            format: int32
    FileUriResponse:
      type: object
      properties:
        fileName:
          type: string
    EmployeePostDto:
      required:
      - email
      - profession
      type: object
      properties:
        email:
          type: string
        profession:
          maxLength: 255
          minLength: 0
          type: string
        permissions:
          type: array
          items:
            type: string
            enum:
            - EDIT_USER_PROFILE
            - CREATE_AND_EDIT_EVENTS
            - RECEIVE_DIRECT_MESSAGES
            - CREATE_AND_EDIT_ARTICLES
    EmployeeDto:
      required:
      - id
      type: object
      properties:
        id:
          type: integer
          format: int32
        profession:
          maxLength: 255
          minLength: 0
          type: string
        permissions:
          type: array
          items:
            type: string
            enum:
            - EDIT_USER_PROFILE
            - CREATE_AND_EDIT_EVENTS
            - RECEIVE_DIRECT_MESSAGES
            - CREATE_AND_EDIT_ARTICLES
    MailingDto:
      required:
      - emails
      - fileUrls
      type: object
      properties:
        title:
          type: string
        messageText:
          type: string
        emails:
          type: array
          items:
            type: string
        fileUrls:
          type: array
          items:
            maxLength: 255
            minLength: 0
            type: string
    EventPostDto:
      required:
      - description
      - enabledChat
      type: object
      properties:
        startDate:
          type: string
          format: date-time
        address:
          type: string
        link:
          type: string
        city:
          type: string
        country:
          type: string
        coverUrl:
          type: string
        additionalUrl:
          type: string
        eventModerators:
          type: array
          items:
            type: integer
            format: int32
        name:
          type: string
        description:
          type: string
        enabledChat:
          type: boolean
        privacy:
          type: array
          items:
            type: string
            enum:
            - APPLICANT
            - MY_CONFIRMED_APPLICANT
            - MY_STUDENT
            - AMBASSADOR
            - SUBSCRIBER
            - INDIVIDUAL
            - OTHER_CONFIRMED_APPLICANT
            - OTHER_STUDENT
            - ALL_CONFIRMED_APPLICANT
            - ALL_STUDENT
        eventTypeId:
          type: integer
          format: int32
    CreateDirectChatDto:
      required:
      - friendStudentId
      type: object
      properties:
        friendStudentId:
          type: integer
          format: int32
    CreateChatWithUniversityDto:
      required:
      - universityId
      type: object
      properties:
        universityId:
          type: integer
          format: int32
    ChatMailingDto:
      required:
      - emails
      - fileUrls
      type: object
      properties:
        title:
          type: string
        messageText:
          type: string
        emails:
          type: array
          items:
            type: string
        fileUrls:
          type: array
          items:
            maxLength: 255
            minLength: 0
            type: string
        pushText:
          type: string
    SettingsRequestDto:
      type: object
      properties:
        timezone:
          type: string
        locale:
          type: string
    ChangePasswordDto:
      type: object
      properties:
        passwordOld:
          type: string
        passwordNew:
          maxLength: 50
          minLength: 8
          type: string
    BookletPostDto:
      required:
      - bookletFileUrl
      - description
      - imageUrl
      - title
      type: object
      properties:
        title:
          maxLength: 255
          minLength: 0
          type: string
        bookletFileUrl:
          maxLength: 255
          minLength: 0
          type: string
        imageUrl:
          maxLength: 255
          minLength: 0
          type: string
        description:
          type: string
    BookletDto:
      required:
      - id
      type: object
      properties:
        id:
          type: integer
          format: int32
        authorId:
          type: integer
          format: int32
        universityId:
          type: integer
          format: int32
        title:
          type: string
        bookletFileUrl:
          type: string
        imageUrl:
          type: string
        description:
          type: string
        createdAt:
          type: string
          format: date-time
        editAt:
          type: string
          format: date-time
    ArticlePostDto:
      required:
      - htmlBody
      - shortDescription
      - title
      type: object
      properties:
        title:
          maxLength: 255
          minLength: 0
          type: string
        shortDescription:
          maxLength: 255
          minLength: 0
          type: string
        tags:
          type: array
          items:
            type: integer
            format: int32
        htmlBody:
          type: string
    ArticleDto:
      required:
      - htmlBody
      - shortDescription
      - title
      type: object
      properties:
        id:
          type: integer
          format: int32
        authorId:
          type: integer
          format: int32
        universityId:
          type: integer
          format: int32
        title:
          type: string
        shortDescription:
          type: string
        tags:
          type: array
          items:
            type: integer
            format: int32
        htmlBody:
          type: string
        createdAt:
          type: string
          format: date-time
        editAt:
          type: string
          format: date-time
        favorite:
          type: boolean
        liked:
          type: boolean
        likes:
          type: integer
          format: int32
    AdvertisingPostDto:
      required:
      - description
      - imageUrl
      - screenDestination
      - subtitle
      - title
      - universityId
      - websiteUrl
      type: object
      properties:
        universityId:
          type: integer
          format: int32
        title:
          maxLength: 255
          minLength: 0
          type: string
        subtitle:
          maxLength: 255
          minLength: 0
          type: string
        description:
          type: string
        imageUrl:
          maxLength: 255
          minLength: 0
          type: string
        websiteUrl:
          maxLength: 255
          minLength: 0
          type: string
        email:
          type: string
        screenDestination:
          type: array
          items:
            maxLength: 30
            minLength: 0
            type: string
        bannerSize:
          maxLength: 10
          minLength: 0
          type: string
        clickLimit:
          type: integer
          format: int32
        clickLimitByUser:
          type: integer
          format: int32
        showsLimit:
          type: integer
          format: int32
        showsLimitByUser:
          type: integer
          format: int32
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
    AdvertisingDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        universityId:
          type: integer
          format: int32
        title:
          type: string
        subtitle:
          type: string
        description:
          type: string
        imageUrl:
          type: string
        websiteUrl:
          type: string
        email:
          type: string
        screenDestination:
          type: array
          items:
            type: string
        bannerSize:
          type: string
        clickLimit:
          type: integer
          format: int32
        clickLimitByUser:
          type: integer
          format: int32
        showsLimit:
          type: integer
          format: int32
        showsLimitByUser:
          type: integer
          format: int32
        allShows:
          type: integer
          format: int32
        uniqueShows:
          type: integer
          format: int32
        allClicks:
          type: integer
          format: int32
        uniqueClicks:
          type: integer
          format: int32
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        editAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
        closed:
          type: boolean
    AdditionalInformationRequest:
      type: object
      properties:
        educations:
          type: array
          items:
            $ref: '#/components/schemas/EducationItem'
        languages:
          type: array
          items:
            $ref: '#/components/schemas/LanguageItem'
        desiredAreasOfStudy:
          type: array
          items:
            type: integer
            format: int32
        desiredEducationLevel:
          type: string
        plannedYearAdmission:
          type: string
        hobbies:
          type: string
        doNeedHostel:
          type: boolean
    EducationItem:
      type: object
      properties:
        educationLevel:
          type: string
        cityName:
          type: string
        school:
          type: string
        receiptDate:
          type: string
        dateIssue:
          type: string
    LanguageItem:
      type: object
      properties:
        languageName:
          type: string
        languageLevel:
          type: string
        confirmationFile:
          type: string
    AcceptInvitationConfirmedApplicantRequest:
      required:
      - accept
      - universityId
      type: object
      properties:
        universityId:
          type: integer
          format: int32
        accept:
          type: boolean
    AcceptConfirmedApplicantRequest:
      required:
      - accept
      - studentId
      type: object
      properties:
        studentId:
          type: integer
          format: int32
        accept:
          type: boolean
    AcceptAmbassadorRequest:
      required:
      - ambassadorId
      type: object
      properties:
        ambassadorId:
          type: integer
          format: int32
        accept:
          type: boolean
    UniversityUpdateDto:
      type: object
      properties:
        name:
          type: string
        information:
          type: string
        foundation:
          type: string
          format: date
        shortDescription:
          type: string
        faqLink:
          type: string
        photo:
          type: string
        description:
          type: string
        shortName:
          type: string
        logoUrl:
          type: string
        coverUrl:
          type: string
        universityLink:
          type: string
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        nameEnglish:
          maxLength: 255
          minLength: 0
          type: string
        shortNameEnglish:
          maxLength: 255
          minLength: 0
          type: string
        userCityId:
          type: integer
          format: int32
        userCountriesIds:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int32
        linksSocialNetwork:
          type: array
          items:
            type: string
        userLanguages:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int32
        street:
          maxLength: 50
          minLength: 0
          type: string
        houseNumber:
          maxLength: 10
          minLength: 0
          type: string
        letter:
          maxLength: 3
          minLength: 0
          type: string
        admission:
          maxLength: 255
          minLength: 0
          type: string
        careers:
          maxLength: 500
          minLength: 0
          type: string
        phoneNumberBody:
          maxLength: 20
          minLength: 0
          type: string
        phoneNumberCountryPrefix:
          maxLength: 6
          minLength: 0
          type: string
        amenityIds:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int32
    ApiResponse:
      type: object
      properties:
        message:
          type: string
    UpdateStudentProfileRequest:
      type: object
      properties:
        firstname:
          type: string
        lastname:
          type: string
        birthday:
          type: string
          format: date
        cityId:
          type: integer
          format: int32
        countryIds:
          type: array
          items:
            type: integer
            format: int32
        languageIds:
          type: array
          items:
            type: integer
            format: int32
        description:
          type: string
        avatarUrl:
          type: string
        socialLinks:
          type: string
        statusId:
          type: integer
          format: int32
    EditEventRequest:
      required:
      - id
      type: object
      properties:
        id:
          type: integer
          format: int32
        startDate:
          type: string
          format: date-time
        name:
          type: string
        description:
          type: string
        address:
          type: string
        link:
          type: string
        enabledChat:
          type: boolean
        coverUrl:
          type: string
        additionalUrl:
          type: string
        privacy:
          type: array
          items:
            type: string
            enum:
            - APPLICANT
            - MY_CONFIRMED_APPLICANT
            - MY_STUDENT
            - AMBASSADOR
            - SUBSCRIBER
            - INDIVIDUAL
            - OTHER_CONFIRMED_APPLICANT
            - OTHER_STUDENT
            - ALL_CONFIRMED_APPLICANT
            - ALL_STUDENT
        eventTypeId:
          type: integer
          format: int32
    BookletPatchDto:
      required:
      - id
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          maxLength: 255
          minLength: 0
          type: string
        bookletFileUrl:
          maxLength: 255
          minLength: 0
          type: string
        imageUrl:
          maxLength: 255
          minLength: 0
          type: string
        description:
          type: string
    AnswerToAdRequest:
      required:
      - idRequest
      - isPublish
      type: object
      properties:
        idRequest:
          type: integer
          format: int32
        isPublish:
          type: boolean
        descriptionReject:
          maxLength: 100
          minLength: 0
          type: string
    AdvertisingPatchDto:
      required:
      - id
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          maxLength: 255
          minLength: 0
          type: string
        subtitle:
          maxLength: 255
          minLength: 0
          type: string
        description:
          type: string
        imageUrl:
          maxLength: 255
          minLength: 0
          type: string
        websiteUrl:
          maxLength: 255
          minLength: 0
          type: string
        email:
          type: string
        screenDestination:
          type: array
          items:
            maxLength: 30
            minLength: 0
            type: string
        bannerSize:
          maxLength: 10
          minLength: 0
          type: string
    AdvertisingPatchAdminDto:
      required:
      - id
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          maxLength: 255
          minLength: 0
          type: string
        subtitle:
          maxLength: 255
          minLength: 0
          type: string
        description:
          type: string
        imageUrl:
          maxLength: 255
          minLength: 0
          type: string
        websiteUrl:
          maxLength: 255
          minLength: 0
          type: string
        email:
          type: string
        screenDestination:
          type: array
          items:
            maxLength: 30
            minLength: 0
            type: string
        bannerSize:
          maxLength: 10
          minLength: 0
          type: string
        clickLimit:
          type: integer
          format: int32
        clickLimitByUser:
          type: integer
          format: int32
        showsLimit:
          type: integer
          format: int32
        showsLimitByUser:
          type: integer
          format: int32
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
    SetUniversityStatus:
      required:
      - status
      - universityId
      type: object
      properties:
        universityId:
          type: integer
          format: int32
        status:
          type: string
          enum:
          - NONE
          - BASIC
          - PAID
    RoleCount:
      type: object
      properties:
        roleName:
          type: string
        count:
          type: integer
          format: int64
    UserCountDto:
      type: object
      properties:
        universityName:
          type: string
        roleCounts:
          type: array
          items:
            $ref: '#/components/schemas/RoleCount'
        totalUsers:
          type: integer
          format: int32
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
        size:
          minimum: 1
          type: integer
          format: int32
        sort:
          type: array
          items:
            type: string
    StatusDto:
      required:
      - name
      - nameEnglish
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          maxLength: 100
          minLength: 0
          type: string
        nameEnglish:
          maxLength: 100
          minLength: 0
          type: string
    StudentDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        type:
          type: string
        ambassador:
          type: boolean
        student:
          type: boolean
        employee:
          type: boolean
        applicant:
          type: boolean
        graduate:
          type: boolean
        universityAmbassador:
          type: integer
          format: int32
        email:
          type: string
        fullName:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        avatarUrl:
          type: string
        city:
          $ref: '#/components/schemas/CityDto'
        userCountries:
          type: array
          items:
            $ref: '#/components/schemas/CountryDto'
        description:
          type: string
        languages:
          type: array
          items:
            $ref: '#/components/schemas/LanguageOfInstructionDto'
        primaryUniversityId:
          type: integer
          format: int32
        primaryUniversity:
          $ref: '#/components/schemas/UniversityShortDto'
        registrationDate:
          type: string
        specialization:
          type: string
        universitySubscribe:
          type: array
          items:
            type: integer
            format: int32
        confirmedApplicant:
          type: boolean
        status:
          $ref: '#/components/schemas/StatusDto'
        birthday:
          type: string
          format: date
    UniversityShortDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        shortName:
          type: string
        logoUrl:
          type: string
        coverUrl:
          type: string
        city:
          $ref: '#/components/schemas/CityDto'
    DictionaryResponseTypeOfDegree:
      type: object
      properties:
        dictionaryName:
          type: string
        dictionary:
          type: array
          items:
            $ref: '#/components/schemas/TypeOfDegree'
    TypeOfDegree:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        nameEnglish:
          maxLength: 50
          minLength: 0
          type: string
    DictionaryResponseStatusDto:
      type: object
      properties:
        dictionaryName:
          type: string
        dictionary:
          type: array
          items:
            $ref: '#/components/schemas/StatusDto'
    DictionaryResponseSpecializationDto:
      type: object
      properties:
        dictionaryName:
          type: string
        dictionary:
          type: array
          items:
            $ref: '#/components/schemas/SpecializationDto'
    ChatCompanionsResponse:
      type: object
      properties:
        companions:
          type: array
          items:
            $ref: '#/components/schemas/StudentDto'
    DictionaryResponseQuotasAndDiscountDto:
      type: object
      properties:
        dictionaryName:
          type: string
        dictionary:
          type: array
          items:
            $ref: '#/components/schemas/QuotasAndDiscountDto'
    QuotasAndDiscountDto:
      required:
      - isDiscount
      - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          maxLength: 50
          minLength: 0
          type: string
        nameEnglish:
          type: string
        isDiscount:
          type: boolean
    NotificationBodyDTO:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        eventDaytime:
          type: string
          format: date-time
        place:
          type: string
        url:
          type: string
        receiverId:
          type: integer
          format: int32
        senderId:
          type: integer
          format: int32
        universityId:
          type: integer
          format: int32
        accept:
          type: boolean
    NotificationDto:
      type: object
      properties:
        notificationId:
          type: integer
          format: int32
        notificationType:
          type: string
        imageUrl:
          type: string
        body:
          $ref: '#/components/schemas/NotificationBodyDTO'
        createDaytime:
          type: string
          format: date-time
        viewedDaytime:
          type: string
          format: date-time
        viewed:
          type: boolean
    DictionaryResponseAmenityDto:
      type: object
      properties:
        dictionaryName:
          type: string
        dictionary:
          type: array
          items:
            $ref: '#/components/schemas/AmenityDto'
    DictionaryResponseLanguageOfInstructionDto:
      type: object
      properties:
        dictionaryName:
          type: string
        dictionary:
          type: array
          items:
            $ref: '#/components/schemas/LanguageOfInstructionDto'
    EventResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        universityId:
          type: integer
          format: int32
        universityShortName:
          type: string
        universityFullName:
          type: string
        universityLogoUrl:
          type: string
        geolocation:
          $ref: '#/components/schemas/Geolocation'
        startDate:
          type: string
          format: date-time
        address:
          type: string
        link:
          type: string
        coverUrl:
          type: string
        additionalUrl:
          type: string
        eventModerators:
          type: array
          items:
            type: integer
            format: int32
        eventSubscribers:
          type: array
          items:
            type: integer
            format: int32
        name:
          type: string
        description:
          type: string
        chatId:
          type: integer
          format: int32
        enabledChat:
          type: boolean
        editAccessUsers:
          type: array
          items:
            type: integer
            format: int32
        removeAccessUsers:
          type: array
          items:
            type: integer
            format: int32
        privacy:
          type: array
          items:
            type: string
        subscriber:
          type: boolean
        eventType:
          $ref: '#/components/schemas/EventType'
    EventType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        nameEnglish:
          maxLength: 50
          minLength: 0
          type: string
    SettingsResponseDto:
      type: object
      properties:
        timezone:
          type: string
        locale:
          type: string
    ChatFriendsResponse:
      type: object
      properties:
        universities:
          type: array
          items:
            $ref: '#/components/schemas/UniversityDto'
        students:
          type: array
          items:
            $ref: '#/components/schemas/StudentDto'
    ChatDto:
      type: object
      properties:
        opponentUserId:
          type: integer
          format: int32
        opponentType:
          type: string
        opponentProfile:
          type: object
        countMessages:
          type: integer
          format: int32
        countViewedMessages:
          type: integer
          format: int32
        viewed:
          type: boolean
        ourUserId:
          type: integer
          format: int32
        chatId:
          type: integer
          format: int32
        chatType:
          type: string
        removedForUserIds:
          type: array
          items:
            type: integer
            format: int32
        pinned:
          type: boolean
        lastMessage:
          $ref: '#/components/schemas/ChatMessageDto'
        pinnedTime:
          type: string
          format: date-time
    ChatMessageDto:
      type: object
      properties:
        senderUserId:
          type: integer
          format: int32
        messageId:
          type: integer
          format: int32
        text:
          type: string
        imageUrl:
          type: array
          items:
            type: string
        attachmentUrl:
          type: array
          items:
            type: string
        dateOfCreation:
          type: string
          format: date-time
    AmbassadorDto:
      type: object
      properties:
        studentName:
          type: string
        studentSurname:
          type: string
        studentUserId:
          type: integer
          format: int32
    DictionaryResponseFormOfEducation:
      type: object
      properties:
        dictionaryName:
          type: string
        dictionary:
          type: array
          items:
            $ref: '#/components/schemas/FormOfEducation'
    FormOfEducation:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        nameEnglish:
          maxLength: 50
          minLength: 0
          type: string
    DictionaryResponseEventType:
      type: object
      properties:
        dictionaryName:
          type: string
        dictionary:
          type: array
          items:
            $ref: '#/components/schemas/EventType'
    EmployeeProfileDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        type:
          type: string
        ambassador:
          type: boolean
        student:
          type: boolean
        employee:
          type: boolean
        applicant:
          type: boolean
        graduate:
          type: boolean
        universityAmbassador:
          type: integer
          format: int32
        email:
          type: string
        fullName:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        avatarUrl:
          type: string
        city:
          $ref: '#/components/schemas/CityDto'
        userCountries:
          type: array
          items:
            $ref: '#/components/schemas/CountryDto'
        description:
          type: string
        languages:
          type: array
          items:
            $ref: '#/components/schemas/LanguageOfInstructionDto'
        primaryUniversityId:
          type: integer
          format: int32
        primaryUniversity:
          $ref: '#/components/schemas/UniversityShortDto'
        registrationDate:
          type: string
        specialization:
          type: string
        universitySubscribe:
          type: array
          items:
            type: integer
            format: int32
        confirmedApplicant:
          type: boolean
        status:
          $ref: '#/components/schemas/StatusDto'
        birthday:
          type: string
          format: date
        profession:
          type: string
        permissions:
          type: array
          items:
            type: string
            enum:
            - EDIT_USER_PROFILE
            - CREATE_AND_EDIT_EVENTS
            - RECEIVE_DIRECT_MESSAGES
            - CREATE_AND_EDIT_ARTICLES
    DestinationDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        nameEnglish:
          type: string
    DictionaryResponseDestinationDto:
      type: object
      properties:
        dictionaryName:
          type: string
        dictionary:
          type: array
          items:
            $ref: '#/components/schemas/DestinationDto'
    DictionaryResponseCountryDto:
      type: object
      properties:
        dictionaryName:
          type: string
        dictionary:
          type: array
          items:
            $ref: '#/components/schemas/CountryDto'
    DictionaryResponseCityDto:
      type: object
      properties:
        dictionaryName:
          type: string
        dictionary:
          type: array
          items:
            $ref: '#/components/schemas/CityDto'
    ChatListResponse:
      type: object
      properties:
        chats:
          type: array
          items:
            $ref: '#/components/schemas/ChatDto'
    ChatHistoryResponse:
      type: object
      properties:
        chatId:
          type: integer
          format: int32
        opponentUserId:
          type: integer
          format: int32
        opponentType:
          type: string
        chatType:
          type: string
        history:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessageDto'
        lastOpponentOnlineTime:
          type: string
          format: date-time
    ArticleTagDto:
      required:
      - name
      - nameEnglish
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          maxLength: 100
          minLength: 0
          type: string
        nameEnglish:
          maxLength: 100
          minLength: 0
          type: string
    DictionaryResponseArticleTagDto:
      type: object
      properties:
        dictionaryName:
          type: string
        dictionary:
          type: array
          items:
            $ref: '#/components/schemas/ArticleTagDto'
    InvitationHistoryResponse:
      type: object
      properties:
        history:
          $ref: '#/components/schemas/SliceMapStringObject'
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          type: array
          items:
            $ref: '#/components/schemas/SortObject'
        paged:
          type: boolean
        pageSize:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
        unpaged:
          type: boolean
    SliceMapStringObject:
      type: object
      properties:
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        number:
          type: integer
          format: int32
        sort:
          type: array
          items:
            $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
    SortObject:
      type: object
      properties:
        direction:
          type: string
        nullHandling:
          type: string
        ascending:
          type: boolean
        property:
          type: string
        ignoreCase:
          type: boolean
    Ambassador:
      required:
      - createdAt
      type: object
      properties:
        id:
          $ref: '#/components/schemas/AmbassadorId'
        student:
          $ref: '#/components/schemas/Student'
        university:
          $ref: '#/components/schemas/University'
        createdAt:
          type: string
          format: date-time
    AmbassadorRequest:
      type: object
      properties:
        id:
          type: integer
          format: int32
        description:
          type: string
        student:
          $ref: '#/components/schemas/Student'
        university:
          $ref: '#/components/schemas/University'
        accepted:
          type: boolean
        createdAt:
          type: string
          format: date-time
        consideredAt:
          type: string
          format: date-time
    Amenity:
      required:
      - name
      - nameEnglish
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          maxLength: 50
          minLength: 0
          type: string
        nameEnglish:
          maxLength: 50
          minLength: 0
          type: string
    AuditLog:
      type: object
      properties:
        id:
          type: integer
          format: int32
        tableName:
          type: string
        operationType:
          type: string
        operatedAt:
          type: string
          format: date-time
        operatedBy:
          $ref: '#/components/schemas/User'
        changes:
          type: object
          additionalProperties:
            type: object
    Chat:
      required:
      - chatType
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          maxLength: 255
          minLength: 0
          type: string
        chatType:
          maxLength: 50
          minLength: 0
          type: string
        opponentType:
          maxLength: 50
          minLength: 0
          type: string
        createdBy:
          $ref: '#/components/schemas/User'
        removedForUserIds:
          type: array
          items:
            type: integer
            format: int32
        createdAt:
          type: string
          format: date-time
        chatMembers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ChatMember'
        chatMessages:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
    ChatMember:
      required:
      - pinned
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ChatMemberId'
        chat:
          $ref: '#/components/schemas/Chat'
        user:
          $ref: '#/components/schemas/User'
        viewed:
          type: boolean
        unreadCount:
          type: integer
          format: int32
        pinned:
          type: boolean
        pinnedAt:
          type: string
          format: date-time
    ChatMemberId:
      required:
      - chatId
      - userId
      type: object
      properties:
        chatId:
          type: integer
          format: int32
        userId:
          type: integer
          format: int32
    ChatMessage:
      type: object
      properties:
        id:
          type: integer
          format: int32
        chat:
          $ref: '#/components/schemas/Chat'
        sender:
          $ref: '#/components/schemas/User'
        receiver:
          $ref: '#/components/schemas/User'
        message:
          type: string
        sentTime:
          type: string
          format: date-time
        imageUrl:
          type: array
          items:
            type: string
        attachmentUrl:
          type: array
          items:
            type: string
    City:
      required:
      - latitude
      - longitude
      - name
      - nameEnglish
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          maxLength: 50
          minLength: 0
          type: string
        nameEnglish:
          maxLength: 50
          minLength: 0
          type: string
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
    ConfirmedApplicant:
      required:
      - createdAt
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ConfirmedApplicantId'
        student:
          $ref: '#/components/schemas/Student'
        university:
          $ref: '#/components/schemas/University'
        createdAt:
          type: string
          format: date-time
    ConfirmedApplicantRequest:
      type: object
      properties:
        id:
          type: integer
          format: int32
        description:
          maxLength: 255
          minLength: 0
          type: string
        student:
          $ref: '#/components/schemas/Student'
        university:
          $ref: '#/components/schemas/University'
        isAccepted:
          type: boolean
        createdAt:
          type: string
          format: date-time
        consideredAt:
          type: string
          format: date-time
    Country:
      required:
      - languages
      - name
      - nameEnglish
      - nativeName
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          maxLength: 50
          minLength: 0
          type: string
        languages:
          type: array
          items:
            type: string
        nativeName:
          type: array
          items:
            type: string
        nameEnglish:
          maxLength: 50
          minLength: 0
          type: string
    Employee:
      type: object
      properties:
        id:
          type: integer
          format: int32
        student:
          $ref: '#/components/schemas/Student'
        profession:
          maxLength: 255
          minLength: 0
          type: string
        permissions:
          type: array
          items:
            type: string
            enum:
            - EDIT_USER_PROFILE
            - CREATE_AND_EDIT_EVENTS
            - RECEIVE_DIRECT_MESSAGES
            - CREATE_AND_EDIT_ARTICLES
    Event:
      required:
      - version
      type: object
      properties:
        id:
          type: integer
          format: int32
        location:
          maxLength: 100
          minLength: 0
          type: string
        creatorUser:
          $ref: '#/components/schemas/User'
        eventStartTime:
          type: string
          format: date-time
        startTimeOnly:
          $ref: '#/components/schemas/LocalTime'
        startDateOnly:
          type: string
          format: date
        name:
          maxLength: 255
          minLength: 0
          type: string
        photo:
          maxLength: 255
          minLength: 0
          type: string
        address:
          maxLength: 255
          minLength: 0
          type: string
        deletedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        eventType:
          $ref: '#/components/schemas/EventType'
        isOnline:
          type: boolean
        university:
          $ref: '#/components/schemas/University'
        link:
          maxLength: 255
          minLength: 0
          type: string
        privacy:
          type: array
          items:
            type: string
            enum:
            - APPLICANT
            - MY_CONFIRMED_APPLICANT
            - MY_STUDENT
            - AMBASSADOR
            - SUBSCRIBER
            - INDIVIDUAL
            - OTHER_CONFIRMED_APPLICANT
            - OTHER_STUDENT
            - ALL_CONFIRMED_APPLICANT
            - ALL_STUDENT
        chatEnabled:
          type: boolean
        description:
          type: string
        additionalUrl:
          maxLength: 255
          minLength: 0
          type: string
        chat:
          $ref: '#/components/schemas/Chat'
        version:
          type: integer
          format: int32
        permissionGranted:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int32
        moderatorUsers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/User'
        notifications:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Notification'
        eventSubscriptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/EventSubscription'
        subscribers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/User'
        eventView:
          $ref: '#/components/schemas/EventView'
    EventSubscription:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EventSubscriptionId'
        user:
          $ref: '#/components/schemas/User'
        event:
          $ref: '#/components/schemas/Event'
        participationLevel:
          type: string
    EventSubscriptionId:
      type: object
      properties:
        userId:
          type: integer
          format: int32
        eventId:
          type: integer
          format: int32
    EventView:
      type: object
      properties:
        eventId:
          type: integer
          format: int32
        subscribersCount:
          type: integer
          format: int64
        event:
          $ref: '#/components/schemas/Event'
    FileStorage:
      type: object
      properties:
        id:
          type: integer
          format: int32
        cloudFileName:
          maxLength: 255
          minLength: 0
          type: string
        originalFileName:
          maxLength: 255
          minLength: 0
          type: string
        createdBy:
          $ref: '#/components/schemas/User'
        createdAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
        bucketName:
          maxLength: 50
          minLength: 0
          type: string
        deleteAtDays:
          type: integer
          format: int32
    JsonNode:
      type: object
    LanguageOfInstruction:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        nameEnglish:
          maxLength: 50
          minLength: 0
          type: string
    LocalTime:
      type: object
      properties:
        hour:
          type: integer
          format: int32
        minute:
          type: integer
          format: int32
        second:
          type: integer
          format: int32
        nano:
          type: integer
          format: int32
    Notification:
      type: object
      properties:
        id:
          type: integer
          format: int32
        arrivedTime:
          type: string
          format: date-time
        deepLink:
          type: string
        description:
          type: string
        event:
          $ref: '#/components/schemas/Event'
        user:
          $ref: '#/components/schemas/User'
        accepted:
          type: boolean
        buttons:
          type: boolean
        title:
          type: string
        type:
          type: string
        urlImage:
          type: string
        viewedTime:
          type: string
          format: date-time
        initiatorUser:
          $ref: '#/components/schemas/User'
    Organization:
      type: object
      properties:
        id:
          type: integer
          format: int32
        university:
          $ref: '#/components/schemas/University'
    QuotasAndDiscount:
      required:
      - isDiscount
      - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          maxLength: 50
          minLength: 0
          type: string
        isDiscount:
          type: boolean
        nameEnglish:
          maxLength: 100
          minLength: 0
          type: string
    Role:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        users:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/User'
    Setting:
      required:
      - locale
      - timezone
      - user
      type: object
      properties:
        id:
          type: integer
          format: int32
        user:
          $ref: '#/components/schemas/User'
        timezone:
          maxLength: 100
          minLength: 0
          type: string
        locale:
          type: object
          properties:
            language:
              type: string
            script:
              type: string
            variant:
              type: string
            displayName:
              type: string
            country:
              type: string
            unicodeLocaleAttributes:
              uniqueItems: true
              type: array
              items:
                type: string
            unicodeLocaleKeys:
              uniqueItems: true
              type: array
              items:
                type: string
            displayLanguage:
              type: string
            displayScript:
              type: string
            displayCountry:
              type: string
            displayVariant:
              type: string
            extensionKeys:
              uniqueItems: true
              type: array
              items:
                type: string
            iso3Language:
              type: string
            iso3Country:
              type: string
        zoneId:
          type: object
          properties:
            id:
              type: string
            rules:
              type: object
              properties:
                fixedOffset:
                  type: boolean
                transitions:
                  type: array
                  items:
                    type: object
                    properties:
                      offsetBefore:
                        type: object
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      offsetAfter:
                        type: object
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      duration:
                        type: object
                        properties:
                          seconds:
                            type: integer
                            format: int64
                          nano:
                            type: integer
                            format: int32
                          negative:
                            type: boolean
                          zero:
                            type: boolean
                          units:
                            type: array
                            items:
                              type: object
                              properties:
                                dateBased:
                                  type: boolean
                                timeBased:
                                  type: boolean
                                durationEstimated:
                                  type: boolean
                      gap:
                        type: boolean
                      dateTimeBefore:
                        type: string
                        format: date-time
                      dateTimeAfter:
                        type: string
                        format: date-time
                      instant:
                        type: string
                        format: date-time
                      overlap:
                        type: boolean
                transitionRules:
                  type: array
                  items:
                    type: object
                    properties:
                      month:
                        type: string
                        enum:
                        - JANUARY
                        - FEBRUARY
                        - MARCH
                        - APRIL
                        - MAY
                        - JUNE
                        - JULY
                        - AUGUST
                        - SEPTEMBER
                        - OCTOBER
                        - NOVEMBER
                        - DECEMBER
                      timeDefinition:
                        type: string
                        enum:
                        - UTC
                        - WALL
                        - STANDARD
                      standardOffset:
                        type: object
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      offsetBefore:
                        type: object
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      offsetAfter:
                        type: object
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      dayOfWeek:
                        type: string
                        enum:
                        - MONDAY
                        - TUESDAY
                        - WEDNESDAY
                        - THURSDAY
                        - FRIDAY
                        - SATURDAY
                        - SUNDAY
                      dayOfMonthIndicator:
                        type: integer
                        format: int32
                      localTime:
                        $ref: '#/components/schemas/LocalTime'
                      midnightEndOfDay:
                        type: boolean
        localeString:
          type: string
    Specialization:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        nameEnglish:
          maxLength: 100
          minLength: 0
          type: string
    Status:
      required:
      - name
      - nameEnglish
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          maxLength: 100
          minLength: 0
          type: string
        nameEnglish:
          maxLength: 100
          minLength: 0
          type: string
    Student:
      required:
      - confirmedApplicant
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        surname:
          type: string
        photo:
          type: string
        birthday:
          type: string
          format: date
        languages:
          type: string
        university:
          $ref: '#/components/schemas/University'
        startYear:
          type: integer
          format: int32
        endYear:
          type: integer
          format: int32
        applicant:
          type: boolean
        confirmedApplicant:
          type: boolean
        bio:
          $ref: '#/components/schemas/JsonNode'
        description:
          type: string
        socialLinks:
          type: string
        faculty:
          type: string
        directionName:
          type: string
        type:
          type: string
        enrollmentOrderNumber:
          type: string
        groupNumber:
          type: string
        courseOfStudy:
          type: integer
          format: int32
        fullName:
          type: string
        user:
          $ref: '#/components/schemas/User'
        ambassador:
          $ref: '#/components/schemas/Ambassador'
        employee:
          $ref: '#/components/schemas/Employee'
        specialization:
          $ref: '#/components/schemas/Specialization'
        status:
          $ref: '#/components/schemas/Status'
    TemporaryPassword:
      type: object
      properties:
        id:
          type: integer
          format: int32
        user:
          $ref: '#/components/schemas/User'
    University:
      required:
      - verified
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        information:
          type: string
        foundation:
          type: string
          format: date
        shortDescription:
          type: string
        faqLink:
          type: string
        photo:
          type: string
        description:
          type: string
        shortName:
          type: string
        logoUrl:
          type: string
        coverUrl:
          type: string
        universityLink:
          type: string
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        nameEnglish:
          maxLength: 255
          minLength: 0
          type: string
        shortNameEnglish:
          maxLength: 255
          minLength: 0
          type: string
        verified:
          type: boolean
        statusPartnership:
          type: string
          enum:
          - NONE
          - BASIC
          - PAID
        linksSocialNetwork:
          type: array
          items:
            maxLength: 255
            minLength: 0
            type: string
        ambassadors:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Ambassador'
        ambassadorRequests:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AmbassadorRequest'
        confirmedApplicants:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ConfirmedApplicant'
        confirmedApplicantRequests:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ConfirmedApplicantRequest'
        students:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Student'
        subscribers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/User'
        user:
          $ref: '#/components/schemas/User'
        organization:
          $ref: '#/components/schemas/Organization'
        universityPrivileged:
          $ref: '#/components/schemas/UniversityPrivileged'
        events:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Event'
        universityView:
          $ref: '#/components/schemas/UniversityView'
        street:
          maxLength: 50
          minLength: 0
          type: string
        houseNumber:
          maxLength: 10
          minLength: 0
          type: string
        letter:
          maxLength: 3
          minLength: 0
          type: string
        admission:
          maxLength: 255
          minLength: 0
          type: string
        careers:
          maxLength: 500
          minLength: 0
          type: string
        phoneNumberBody:
          maxLength: 20
          minLength: 0
          type: string
        phoneNumberCountryPrefix:
          maxLength: 6
          minLength: 0
          type: string
        amenities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Amenity'
        standGalleryImages:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FileStorage'
        universityTypeOfDegrees:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UniversityTypeOfDegree'
        employees:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Employee'
    UniversityPrivileged:
      type: object
      properties:
        id:
          type: integer
          format: int32
        university:
          $ref: '#/components/schemas/University'
    UniversitySubscription:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UniversitySubscriptionId'
        user:
          $ref: '#/components/schemas/User'
        university:
          $ref: '#/components/schemas/University'
        issuedAt:
          type: string
          format: date
    UniversitySubscriptionId:
      required:
      - universityId
      - userId
      type: object
      properties:
        userId:
          type: integer
          format: int32
        universityId:
          type: integer
          format: int32
    UniversityTypeOfDegree:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UniversityTypeOfDegreeId'
        university:
          $ref: '#/components/schemas/University'
        typeOfDegree:
          $ref: '#/components/schemas/TypeOfDegree'
        studyDuration:
          type: integer
          format: int32
        minCost:
          type: integer
          format: int32
        maxCost:
          type: integer
          format: int32
        programLink:
          maxLength: 255
          minLength: 0
          type: string
        formOfEducations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FormOfEducation'
        languageOfInstructions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/LanguageOfInstruction'
        quotasAndDiscounts:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/QuotasAndDiscount'
        specializations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Specialization'
        quotasDescriptionLink:
          maxLength: 255
          minLength: 0
          type: string
    UniversityTypeOfDegreeId:
      required:
      - typeOfDegreeId
      - universityId
      type: object
      properties:
        universityId:
          type: integer
          format: int32
        typeOfDegreeId:
          type: integer
          format: int32
    UniversityView:
      type: object
      properties:
        universityId:
          type: integer
          format: int32
        eventsCount:
          type: integer
          format: int64
        ambassadorsCount:
          type: integer
          format: int64
        subscriptionsCount:
          type: integer
          format: int64
        employeesCount:
          type: integer
          format: int64
        university:
          $ref: '#/components/schemas/University'
    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        username:
          type: string
        imageUrl:
          type: string
        email:
          type: string
        password:
          type: string
        provider:
          type: string
        shownOnboarding:
          type: boolean
        student:
          $ref: '#/components/schemas/Student'
        university:
          $ref: '#/components/schemas/University'
        role:
          $ref: '#/components/schemas/Role'
        deletedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        online:
          type: boolean
        auditLogs:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AuditLog'
        notifications:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Notification'
        eventSubscriptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/EventSubscription'
        universitySubscriptions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UniversitySubscription'
        settings:
          $ref: '#/components/schemas/Setting'
        temporaryPassword:
          $ref: '#/components/schemas/TemporaryPassword'
        createdChats:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Chat'
        city:
          $ref: '#/components/schemas/City'
        countries:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Country'
        countryNames:
          type: string
        languages:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/LanguageOfInstruction'
        roleRu:
          type: string
        ambassador:
          type: boolean
        employee:
          type: boolean
        graduate:
          type: boolean
        applicant:
          type: boolean
        confirmedApplicant:
          type: boolean
        userWithTempPassword:
          type: boolean
        studentStatus:
          type: boolean
        admin:
          type: boolean
        deleted:
          type: boolean
    RequestNewUniversityDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        email:
          type: string
        createdAt:
          type: string
          format: date-time
